name: Test and Build Python package

on:
  push:
    branches:
      - feature
      - develop
      - test
  pull_request:
    branches:
      - main
  create:
    tag:
      - '*'

env:
  TEST_TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
  TEST_TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # - uses: actions/checkout@v2
    # - name: Set up Python 3.8
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.8'
    # - name: Install dependencies
    #   run: pip install tox
    # - name: Run tests - py38
    #   run: |
    #     tox -e testenv
    #     tox -e black
    #     tox -e mypy
    #     tox -e build-check
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install tox
    - name: Run tests - py39
      run: |
        tox -e testenv
        tox -e black
        tox -e mypy
        tox -e build-check
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install tox
    - name: Run tests - py310
      run: |
        tox -e testenv
        tox -e black
        tox -e mypy
        tox -e build-check
    if: |
      github.event_name == 'push' && (
        (github.ref == 'refs/heads/develop') ||
        (github.ref == 'refs/heads/feature') ||
        (github.ref == 'refs/heads/test')
      )

  deploy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'create' && startsWith(github.ref, 'refs/tags/'))

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: |
        python -m pip install --upgrade pip
        pip install build
  
    - name: Build and upload to test.pypi
      run: |
        python -m build --outdir dist/
        python -m pip install --upgrade twine
        twine upload --repository-url https://test.pypi.org/legacy/ dist/* -u __token__ --p $TEST_TWINE_PASSWORD
  
    - name: Build and upload to PyPI
      run: |
        python -m build --outdir dist/
        python -m pip install --upgrade twine
        twine upload dist/* -u __token__ -p $TWINE_PASSWORD
        
